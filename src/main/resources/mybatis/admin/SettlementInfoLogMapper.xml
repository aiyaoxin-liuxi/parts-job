<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhl.job.dao.ISettlementInfoLogDao">

	<resultMap type="SettlementInfoLog" id="settlemenLogtMap">
		<id property="id" column="ID" jdbcType="VARCHAR" />
   		<result property="settlementId" column="SETTLEMENT_ID" jdbcType="VARCHAR" />
   		<result property="pUserId" column="P_USER_ID" jdbcType="VARCHAR" />
   		<result property="cUserId" column="C_USER_ID" jdbcType="VARCHAR" />
   		<result property="pid" column="P_ID" jdbcType="VARCHAR" />
   		<result property="cid" column="C_ID" jdbcType="VARCHAR" />
   		<result property="workId" column="WORK_ID" jdbcType="VARCHAR" />
   		<result property="applyId" column="APPLY_ID" jdbcType="VARCHAR" />
   		<result property="settlementDate" column="SETTLEMENT_DATE" jdbcType="TIMESTAMP" />
   		<result property="workDay" column="WORK_DAY" jdbcType="TIMESTAMP" />
   		<result property="advancePay" column="ADVANCE_PAY" jdbcType="DECIMAL" />
   		<result property="accountPay" column="ACCOUNT_PAY" jdbcType="DECIMAL" />
   		<result property="remark" column="REMARK" jdbcType="VARCHAR"/>
   		<result property="type" column="TYPE" jdbcType="VARCHAR"/>
   		<result property="state" column="STATE" jdbcType="VARCHAR"/>
   		<result property="createdate" column="CREATEDATE" jdbcType="TIMESTAMP" />
   		<result property="isdel" column="ISDEL" jdbcType="VARCHAR"/>
	</resultMap>
	
<!-- 公用sql -->

	<!-- 所有参数 -->
	<sql id="Base_Column_List">
		ID, SETTLEMENT_ID, P_USER_ID, C_USER_ID, P_ID, C_ID, WORK_ID, APPLY_ID, 
        SETTLEMENT_DATE, WORK_DAY, ADVANCE_PAY, ACCOUNT_PAY,
        REMARK, TYPE, STATE, CREATEDATE, ISDEL
	</sql>
	<!-- 标记为未删除的 -->
	<sql id="Base_Column_isdel">
		 and ISDEL = '00'
	</sql>


<!-- selece -->

	<!-- 根据主键id、工作时间和结算单id查询 -->
	<select id="querySInfoLogByIdAndTimeAndSetId" parameterType="map" resultMap="settlemenLogtMap">
		select 
		<include refid="Base_Column_List" /> 
		from settlementinfo_log 
		<where>
			ID = #{id} and SETTLEMENT_ID = #{settlementId} and WORK_DAY = #{workDay}
			<include refid="Base_Column_isdel" /> 
		</where>
	</select>
	
	<!-- 根据申请单id查询对应的结算明细 -->
	<select id="querySInfoByApplyId" parameterType="map" resultMap="settlemenLogtMap">
		select 
		<include refid="Base_Column_List" /> 
		from settlementinfo_log 
		<where>
			APPLY_ID = #{applyId}
			<include refid="Base_Column_isdel" /> 
		</where>
	</select>
	
	
	
	<!-- queryListBySettleIdAndWorkDay -->
	<select id="queryListBySettleIdAndWorkDay" parameterType="map" resultMap="settlemenLogtMap">
		select 
		<include refid="Base_Column_List" /> 
		from settlementinfo_log 
		<where>
			SETTLEMENT_ID = #{settlementId} and WORK_DAY = #{workDay}
			<include refid="Base_Column_isdel" /> 
			order by CREATEDATE desc,ID desc
		</where>
	</select>
	
	
<!-- update -->

	<!-- 更新（结算） -->
	<update id="updateSettlementInfoLog" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			update settlementinfo_log  
			<set>
				<if test="item.accountPay !=null and item.accountPay !=''">
					ACCOUNT_PAY=#{item.accountPay},
				</if>
				<if test="item.settlementDate !=null and item.settlementDate !=''">
					SETTLEMENT_DATE=#{item.settlementDate},
				</if>
				<if test="item.state !=null and item.state !=''">
					STATE=#{item.state},
				</if>
			</set>
			where ID = #{item.id}
		</foreach>
	</update>
	
<!-- insert -->

	<!-- 写入 -->
	<insert id="addSettlementInfoLog" parameterType="java.util.List" useGeneratedKeys="false">
		insert into settlementinfo_log (
        <include refid="Base_Column_List"/>
        )
        <foreach collection="list" item="item" index="index" separator="union all">
            (select 
            #{item.id},#{item.settlementId},#{item.pUserId},#{item.cUserId},
            #{item.pid},#{item.cid},#{item.workId},#{item.applyId},
            #{item.settlementDate},#{item.workDay},#{item.advancePay},
            #{item.accountPay},#{item.remark},#{item.type},#{item.state},
            #{item.createdate},#{item.isdel} 
            from dual)
        </foreach>
	</insert>

</mapper>